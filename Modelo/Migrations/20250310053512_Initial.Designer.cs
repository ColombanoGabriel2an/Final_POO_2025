// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250310053512_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsumoDescuento", b =>
                {
                    b.Property<int>("ConsumoId")
                        .HasColumnType("int");

                    b.Property<int>("DescuentosAplicadosDescuentoId")
                        .HasColumnType("int");

                    b.HasKey("ConsumoId", "DescuentosAplicadosDescuentoId");

                    b.HasIndex("DescuentosAplicadosDescuentoId");

                    b.ToTable("ConsumoDescuento");
                });

            modelBuilder.Entity("Entidades.Acreditacion", b =>
                {
                    b.Property<int>("AcreditacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcreditacionId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedioDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TarjetaCreditoTarjetaId")
                        .HasColumnType("int");

                    b.Property<int>("TarjetaId")
                        .HasColumnType("int");

                    b.HasKey("AcreditacionId");

                    b.HasIndex("TarjetaCreditoTarjetaId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("Acreditaciones");
                });

            modelBuilder.Entity("Entidades.Consumo", b =>
                {
                    b.Property<int>("ConsumoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TarjetaCreditoTarjetaId")
                        .HasColumnType("int");

                    b.Property<int>("TarjetaId")
                        .HasColumnType("int");

                    b.HasKey("ConsumoId");

                    b.HasIndex("TarjetaCreditoTarjetaId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("Consumos");
                });

            modelBuilder.Entity("Entidades.Descuento", b =>
                {
                    b.Property<int>("DescuentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescuentoId"));

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoFijo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rubro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TopeMonto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DescuentoId");

                    b.ToTable("Descuentos");
                });

            modelBuilder.Entity("Entidades.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Entidades.Tarjeta", b =>
                {
                    b.Property<int>("TarjetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarjetaId"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadEmisora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TarjetaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Tarjetas");

                    b.HasDiscriminator<string>("TipoTarjeta").HasValue("Tarjeta");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Entidades.TarjetaCredito", b =>
                {
                    b.HasBaseType("Entidades.Tarjeta");

                    b.Property<decimal>("Disponible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsExtension")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TenedorPersonaId")
                        .HasColumnType("int");

                    b.HasIndex("TenedorPersonaId");

                    b.HasDiscriminator().HasValue("Credito");
                });

            modelBuilder.Entity("Entidades.TarjetaDebito", b =>
                {
                    b.HasBaseType("Entidades.Tarjeta");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Debito");
                });

            modelBuilder.Entity("ConsumoDescuento", b =>
                {
                    b.HasOne("Entidades.Consumo", null)
                        .WithMany()
                        .HasForeignKey("ConsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Descuento", null)
                        .WithMany()
                        .HasForeignKey("DescuentosAplicadosDescuentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entidades.Acreditacion", b =>
                {
                    b.HasOne("Entidades.TarjetaCredito", null)
                        .WithMany("Acreditaciones")
                        .HasForeignKey("TarjetaCreditoTarjetaId");

                    b.HasOne("Entidades.Tarjeta", "Tarjeta")
                        .WithMany()
                        .HasForeignKey("TarjetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("Entidades.Consumo", b =>
                {
                    b.HasOne("Entidades.TarjetaCredito", null)
                        .WithMany("Consumos")
                        .HasForeignKey("TarjetaCreditoTarjetaId");

                    b.HasOne("Entidades.Tarjeta", "Tarjeta")
                        .WithMany()
                        .HasForeignKey("TarjetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("Entidades.Tarjeta", b =>
                {
                    b.HasOne("Entidades.Persona", "Titular")
                        .WithMany("Tarjetas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("Entidades.TarjetaCredito", b =>
                {
                    b.HasOne("Entidades.Persona", "Tenedor")
                        .WithMany()
                        .HasForeignKey("TenedorPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenedor");
                });

            modelBuilder.Entity("Entidades.Persona", b =>
                {
                    b.Navigation("Tarjetas");
                });

            modelBuilder.Entity("Entidades.TarjetaCredito", b =>
                {
                    b.Navigation("Acreditaciones");

                    b.Navigation("Consumos");
                });
#pragma warning restore 612, 618
        }
    }
}
